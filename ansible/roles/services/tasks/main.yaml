---
# roles/services/tasks/main.yml

- name: Clone services from repository
  ansible.builtin.git:
    repo: 'https://github.com/m-mattia-m/infrastructure-setup.git'
    dest: /home/{{ ansible_user }}/infrastructure
    clone: true
    version: ansible

- name: Update traefik acme.json permissions
  ansible.builtin.file:
    path: "/home/{{ ansible_user }}/infrastructure/services/traefik/data/acme.json"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0600"

- name: Create docker proxy network
  become: true # run command with sudo access
  ansible.builtin.docker_network:
    name: proxy

- name: Call 'fqdn' replacement tasks
  ansible.builtin.include_tasks: ./replace/tasks/main.yaml
  vars:
    target_directory: /home/{{ ansible_user }}/infrastructure/services
    placeholder: "{ansible.fqdn}"
    replacement: "{{ fqdn }}"

- name: Call 'ansible-user' replacement tasks
  ansible.builtin.include_tasks: ./replace/tasks/main.yaml
  vars:
    target_directory: /home/{{ ansible_user }}/infrastructure/services
    placeholder: "${ANSIBLE_USER}"
    replacement: "{{ ansible_user }}"

- name: Call 'shlink-fqdn' replacement tasks
  ansible.builtin.include_tasks: ./replace/tasks/main.yaml
  vars:
    target_directory: /home/{{ ansible_user }}/infrastructure/services
    placeholder: "{shlink.fqdn}"
    replacement: "{{ shlink_server_fqdn }}"

- name: Call 'shlink-fqdn-ui' replacement tasks
  ansible.builtin.include_tasks: ./replace/tasks/main.yaml
  vars:
    target_directory: /home/{{ ansible_user }}/infrastructure/services
    placeholder: "{shlink.fqdn.ui}"
    replacement: "{{ shlink_ui_fqdn }}"

- name: Call 'invoiceplane-fqdn' replacement tasks
  ansible.builtin.include_tasks: ./replace/tasks/main.yaml
  vars:
    target_directory: /home/{{ ansible_user }}/infrastructure/services
    placeholder: "{invoiceplane.fqdn}"
    replacement: "{{ invoiceplane_fqdn }}"

- name: Call 'portainer-fqdn' replacement tasks
  ansible.builtin.include_tasks: ./replace/tasks/main.yaml
  vars:
    target_directory: /home/{{ ansible_user }}/infrastructure/services
    placeholder: "{portainer.fqdn}"
    replacement: "{{ fqdn }}"

- name: Call 'caServer' replacement tasks
  ansible.builtin.include_tasks: ./replace/tasks/main.yaml
  vars:
    target_directory: /home/{{ ansible_user }}/infrastructure/services
    placeholder: "${caServer}"
    replacement: "{{ ca_server }}" # For testing

- name: Call 'AllowList - DynDNS' replacement tasks
  ansible.builtin.include_tasks: ./replace/tasks/main.yaml
  vars:
    target_directory: "/home/{{ ansible_user }}/infrastructure/services"
    placeholder: "replace:home.dyn.dns"
    replacement: "{{ allowed_dyn_dns }}"

- name: Call 'AllowList - files to update' replacement tasks
  ansible.builtin.include_tasks: ./replace/tasks/main.yaml
  vars:
    target_directory: "/home/{{ ansible_user }}/infrastructure/services"
    placeholder: "replace.files.to.update"
    replacement: "{{ allow_list_files_to_update }}"

# replace from here, if you find a solution for starting shlink with an .env file

- name: Call '${SHLINK_DB_NAME}' replacement tasks
  ansible.builtin.include_tasks: ./replace/tasks/main.yaml
  vars:
    target_directory: "/home/{{ ansible_user }}/infrastructure/services"
    placeholder: "${SHLINK_DB_NAME}"
    replacement: "{{ shlink_db_name }}"

- name: Call '${SHLINK_DB_USER}' replacement tasks
  ansible.builtin.include_tasks: ./replace/tasks/main.yaml
  vars:
    target_directory: "/home/{{ ansible_user }}/infrastructure/services"
    placeholder: "${SHLINK_DB_USER}"
    replacement: "{{ shlink_db_user }}"

- name: Call '${SHLINK_DB_PASSWORD}' replacement tasks
  ansible.builtin.include_tasks: ./replace/tasks/main.yaml
  vars:
    target_directory: "/home/{{ ansible_user }}/infrastructure/services"
    placeholder: "${SHLINK_DB_PASSWORD}"
    replacement: "{{ shlink_db_password }}"

- name: Call '${SHLINK_GEOLITE_LICENSE_KEY}' replacement tasks
  ansible.builtin.include_tasks: ./replace/tasks/main.yaml
  vars:
    target_directory: "/home/{{ ansible_user }}/infrastructure/services"
    placeholder: "${SHLINK_GEOLITE_LICENSE_KEY}"
    replacement: "{{ shlink_init_api_key }}"

- name: Call '${SHLINK_INITIAL_API_KEY}' replacement tasks
  ansible.builtin.include_tasks: ./replace/tasks/main.yaml
  vars:
    target_directory: "/home/{{ ansible_user }}/infrastructure/services"
    placeholder: "${SHLINK_INITIAL_API_KEY}"
    replacement: "{{ shlink_geoligt_license_key }}"

- name: Call '${SHLINK_SERVER_FQDN}' replacement tasks
  ansible.builtin.include_tasks: ./replace/tasks/main.yaml
  vars:
    target_directory: "/home/{{ ansible_user }}/infrastructure/services"
    placeholder: "${SHLINK_SERVER_FQDN}"
    replacement: "{{ shlink_server_fqdn }}"

- name: Call '${SHLINK_UI_FQDN}' replacement tasks
  ansible.builtin.include_tasks: ./replace/tasks/main.yaml
  vars:
    target_directory: "/home/{{ ansible_user }}/infrastructure/services"
    placeholder: "${SHLINK_SERVER_URL}"
    replacement: "{{ shlink_server_url }}"

# replace until here, if you find a solution for starting shlink with an .env file

- name: Create cron-job for dynDNS-check every day at 2am
  ansible.builtin.cron:
    name: "refresh dynDNS"
    minute: "0"
    hour: "2"
    job: "sh /home/{{ ansible_user }}/infrastructure/services/dyndns-check/check-dyndns.sh"

- name: Kill processes running on port 80
  ansible.builtin.include_tasks: ./kill-process/tasks/main.yaml

- name: Copy environment
  vars:
    parent_dir: "{{ playbook_dir | dirname }}"
  ansible.builtin.copy:
    src: "{{ parent_dir }}/config.env"
    dest: "/home/{{ ansible_user }}/infrastructure/"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0644'

- name: Generate environment files with }/config.env
  ansible.builtin.make:
    chdir: "/home/{{ ansible_user }}/infrastructure/"
    target: generate-environment

- name: Start traefik
  become: true
  community.docker.docker_compose_v2:
    project_src: /home/{{ ansible_user }}/infrastructure/services/traefik

- name: Start whoami
  become: true
  community.docker.docker_compose_v2:
    project_src: /home/{{ ansible_user }}/infrastructure/services/whoami

- name: Start portainer
  become: true
  community.docker.docker_compose_v2:
    project_src: /home/{{ ansible_user }}/infrastructure/services/portainer

- name: Start invoiceplane
  become: true
  community.docker.docker_compose_v2:
    project_src: /home/{{ ansible_user }}/infrastructure/services/invoiceplane

# you must start the docker compose file with `--env-file .env`
- name: Start shlink
  become: true
  community.docker.docker_compose_v2:
    project_src: /home/{{ ansible_user }}/infrastructure/services/shlink
    # env_files: /home/{{ ansible_user }}/infrastructure/services/shlink/.env

- name: Start Backup
  become: true
  community.docker.docker_compose_v2:
    project_src: /home/{{ ansible_user }}/infrastructure/services/backup
