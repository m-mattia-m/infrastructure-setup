---
# roles/initialisation/tasks/main.yml

- name: Ensure the VM is reachable
  ansible.builtin.ping:

- name: Update and upgrade apt cache
  ansible.builtin.apt:
    update_cache: true
    upgrade: true
  become: true

- name: Install gnome-terminal and curl via apt
  ansible.builtin.apt:
    name: gnome-terminal, curl
    update_cache: true
  become: true

- name: Install git-all via apt
  ansible.builtin.apt:
    name: git-all
    state: present
    update_cache: true
  become: true

- name: Install make via apt
  ansible.builtin.apt:
    name: make
    state: present
    update_cache: true
  become: true

- name: Install redis-tools via apt
  ansible.builtin.apt:
    name: redis-tools
    state: present
    update_cache: true
  become: true

- name: Install postgresql-client via apt
  ansible.builtin.apt:
    name: postgresql-client
    state: present
    update_cache: true
  become: true

- name: Copy and execute rclone installation script
  become: true
  ansible.builtin.script:
    cmd: "{{ role_path }}/scripts/rclone-installation.sh"

- name: Install libpq-dev via apt
  ansible.builtin.apt:
    name: libpq-dev
    state: present
    update_cache: true
  become: true

- name: Install python3-psycopg2 via apt
  ansible.builtin.apt:
    name: python3-psycopg2
    state: present
    update_cache: true
  become: true

- name: Copy and execute docker installation script
  become: true
  ansible.builtin.script:
    cmd: "{{ role_path }}/scripts/docker-installation.sh"

- name: Install go via snap
  ansible.builtin.apt:
    name: golang-go
    state: present
  become: true

- name: Install python-3-pip via apt
  become: true
  ansible.builtin.apt:
    name: python3-pip
    state: present
    update_cache: true

- name: Install pymysql via pip
  become: true
  ansible.builtin.pip:
    name: pymysql
    state: present
    break_system_packages: true

- name: Install cryptography package via pip
  ansible.builtin.pip:
    name: cryptography
    state: present
    break_system_packages: true

- name: Install mysql-cli via apt
  ansible.builtin.apt:
    name: mysql-client-core-8.0
    state: present
    update_cache: true
  become: true

## This OpenVPN Access Server installation works fine but I have trouble with the ports.
## If I start OpenVPN it uses port 443 which is needed for traefik TLS routing (I don't want to change the default port.)
# - name: Execute open-vpn-server installation script
#   become: true
#   ansible.builtin.script: "{{ role_path }}/scripts/open-vpn-server-installation.sh"
#   register: command_output
#
# - name: Save Logs in file
#   become: true
#   ansible.builtin.copy:
#     dest: "/home/{{ ansible_user }}/open-vpn-access-server-log.txt"
#     content: "{{ command_output.stdout }}"
#     owner: "{{ ansible_user }}"
#     group: "{{ ansible_user }}"
#     mode: '0744'
#   when: command_output.stdout is defined
#
## This print should work but it is not fully tested.
# - name: Read file content
#   ansible.builtin.slurp:
#     src: open-vpn-access-server-log.txt
#   register: file_content
#
# - name: Extract content between markers
#   ansible.builtin.set_fact:
#     filtered_lines: >-
#       {% set start_marker = '+++++++++++++++++++++++++++++++++++++++++++++++' %}
#       {% set end_marker = '+++++++++++++++++++++++++++++++++++++++++++++++' %}
#
#       {% set start_index = file_content.content | b64decode | string | regex_search(start_marker + '(.*)' + end_marker) %}
#       {% if start_index %}
#       {{ start_index.group(1).strip() }}
#       {% else %}
#       Content between markers not found!
#       {% endif %}
#
# - name: Debug output
#   ansible.builtin.debug:
#     msg: "{{ filtered_lines.stdout }}"

# reboot is required for correct docker installation
- name: Reboot machine
  become: true
  ansible.builtin.reboot:
    msg: "Rebooting machine in 5 seconds"
    # post_reboot_delay: 5
    connect_timeout: 300

# unfortunally is the image for the backup solution in a private repostiory
- name: Log into ghcr.io
  ansible.builtin.docker_login:
    registry: ghcr.io
    username: "{{ ghcr_username }}"
    password: "{{ ghcr_password }}"

# https://www.tecmint.com/change-apache-port-in-linux/
- name: Call 'Apache2 port 80 - port conf' replacement tasks
  ansible.builtin.include_tasks: roles/shared/tasks/replace-in-file/tasks/main.yaml
  args:
    apply:
      become: true
  vars:
    target_file: "/etc/apache2/ports.conf"
    placeholder: "80"
    replacement: "8979"

- name: Call 'Apache2 port 80 - default conf' replacement tasks
  ansible.builtin.include_tasks: roles/shared/tasks/replace-in-file/tasks/main.yaml
  args:
    apply:
      become: true
  vars:
    target_file: "/etc/apache2/sites-enabled/000-default.conf"
    placeholder: "80"
    replacement: "8979"

- name: Call 'Apache2 port 443 - port conf' replacement tasks
  ansible.builtin.include_tasks: roles/shared/tasks/replace-in-file/tasks/main.yaml
  args:
    apply:
      become: true
  vars:
    target_file: "/etc/apache2/ports.conf"
    placeholder: "443"
    replacement: "444"

- name: Kill processes running on port 80
  ansible.builtin.include_tasks: roles/shared/tasks/kill-process/tasks/main.yaml
  vars:
    port_to_kill: 80
